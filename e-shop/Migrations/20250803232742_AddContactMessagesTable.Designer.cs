// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using e_shop.Models;

#nullable disable

namespace e_shop.Migrations
{
    [DbContext(typeof(Customerwebsite1Context))]
    [Migration("20250803232742_AddContactMessagesTable")]
    partial class AddContactMessagesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("e_shop.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AdminID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Passwor")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AdminId")
                        .HasName("PK__Admins__719FE4E8A65A31EA");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("e_shop.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A2B017C8021");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("e_shop.Models.ContactMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactMessages");
                });

            modelBuilder.Entity("e_shop.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64B8A3586673");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("e_shop.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FeedbackID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerFid")
                        .HasColumnType("int")
                        .HasColumnName("CustomerFID");

                    b.Property<DateTime?>("FeedbackDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProductFid")
                        .HasColumnType("int")
                        .HasColumnName("ProductFID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__6A4BEDF6B209DCEB");

                    b.HasIndex("CustomerFid");

                    b.HasIndex("ProductFid");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("e_shop.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CustomerFid")
                        .HasColumnType("int")
                        .HasColumnName("CustomerFID");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly?>("Time")
                        .HasColumnType("time");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BAFDBE1F820");

                    b.HasIndex("CustomerFid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("e_shop.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int?>("OrderFid")
                        .HasColumnType("int")
                        .HasColumnName("OrderFID");

                    b.Property<int?>("ProductFid")
                        .HasColumnType("int")
                        .HasColumnName("ProductFID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("OrderDetailId")
                        .HasName("PK__OrderDet__D3B9D30C1706113F");

                    b.HasIndex("OrderFid");

                    b.HasIndex("ProductFid");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("e_shop.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("BrandFid")
                        .HasColumnType("int")
                        .HasColumnName("BrandFID");

                    b.Property<int?>("CategoryFid")
                        .HasColumnType("int")
                        .HasColumnName("CategoryFID");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Pprice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("PPrice");

                    b.Property<string>("ProductName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<decimal?>("Srice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__B40CC6ED84E2BDD3");

                    b.HasIndex("CategoryFid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("e_shop.Models.Feedback", b =>
                {
                    b.HasOne("e_shop.Models.Customer", "CustomerF")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CustomerFid")
                        .HasConstraintName("FK__Feedbacks__Custo__32E0915F");

                    b.HasOne("e_shop.Models.Product", "ProductF")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ProductFid")
                        .HasConstraintName("FK__Feedbacks__Produ__33D4B598");

                    b.Navigation("CustomerF");

                    b.Navigation("ProductF");
                });

            modelBuilder.Entity("e_shop.Models.Order", b =>
                {
                    b.HasOne("e_shop.Models.Customer", "CustomerF")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerFid")
                        .HasConstraintName("FK__Orders__Customer__36B12243");

                    b.Navigation("CustomerF");
                });

            modelBuilder.Entity("e_shop.Models.OrderDetail", b =>
                {
                    b.HasOne("e_shop.Models.Order", "OrderF")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderFid")
                        .HasConstraintName("FK__OrderDeta__Order__34C8D9D1");

                    b.HasOne("e_shop.Models.Product", "ProductF")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductFid")
                        .HasConstraintName("FK__OrderDeta__Produ__35BCFE0A");

                    b.Navigation("OrderF");

                    b.Navigation("ProductF");
                });

            modelBuilder.Entity("e_shop.Models.Product", b =>
                {
                    b.HasOne("e_shop.Models.Category", "CategoryF")
                        .WithMany("Products")
                        .HasForeignKey("CategoryFid")
                        .HasConstraintName("FK__Products__Catego__38996AB5");

                    b.Navigation("CategoryF");
                });

            modelBuilder.Entity("e_shop.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("e_shop.Models.Customer", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("e_shop.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("e_shop.Models.Product", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
